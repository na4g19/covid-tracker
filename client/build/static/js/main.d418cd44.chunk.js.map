{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["API_ENDPOINT","App","Component","CovidChart","props","state","labels","datasets","label","fill","lineTension","borderColor","borderWidth","pointRadius","data","refreshChart","this","updateChart","bind","country","axios","get","then","res","countryData","newDatasets","slice","map","entry","weeklyCount","setState","yearWeek","catch","err","console","log","id","options","title","display","text","fontSize","legend","position","maintainAspectRatio","CountryDropdown","changeTitle","event","newTitle","target","textContent","btnTitle","countries","a","countryNames","DropdownButton","onSelect","e","Dropdown","Item","eventKey","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAMMA,EAAe,wBAEAC,E,4JACjB,WACI,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GALiBC,aAW3BC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,OAAQ,GACRC,SAAU,CACN,CACIC,MAAO,QACPC,MAAM,EACNC,YAAa,IACbC,YAAa,uBACbC,YAAa,EACbC,YAAa,EACbC,KAAM,IAEV,CACIN,MAAO,SACPC,MAAM,EACNC,YAAa,IACbC,YAAa,uBACbC,YAAa,EACbC,YAAa,EACbC,KAAM,MArBH,E,qDA2BnB,WACIC,EAAeC,KAAKC,YAAYC,KAAKF,Q,yBAGzC,SAAYG,GAAU,IAAD,OACjBC,IAAMC,IAAN,UAAarB,EAAb,0BAA2CmB,IACtCG,MAAK,SAAAC,GACF,IAAMT,EAAOS,EAAIT,KAAKU,YAChBC,EAAc,EAAKpB,MAAME,SAASmB,QAExCD,EAAY,GAAGX,KAAOA,EAAI,MAAUa,KAAI,SAAAC,GAAK,OAAIA,EAAMC,eACvDJ,EAAY,GAAGX,KAAOA,EAAI,OAAWa,KAAI,SAAAC,GAAK,OAAIA,EAAMC,eAExD,EAAKC,UAAU,iBAAO,CAClBvB,SAAUkB,EACVnB,OAAQQ,EAAI,MAAUa,KAAI,SAAAC,GAAK,OAAIA,EAAMG,mBAGhDC,OAAM,SAAAC,GACHC,QAAQC,IAAI,gD,oBAIxB,WACI,OACI,qBAAKC,GAAG,cAAR,SACI,cAAC,OAAD,CACItB,KAAQE,KAAKX,MACbgC,QAAW,CACPC,MAAO,CACHC,SAAS,EACTC,KAAM,2CACNC,SAAU,IAEdC,OAAQ,CACJH,SAAS,EACTI,SAAU,SAEdC,qBAAqB,W,GAlEpB1C,aA2EnB2C,E,kDACF,WAAYzC,GAAQ,IAAD,8BACf,cAAMA,IA6BV0C,YAAc,SAACC,GACX,IAAIC,EAAWD,EAAME,OAAOC,YAC5B,EAAKpB,SAAS,CAAEqB,SAAUH,KA9B1B,EAAK3C,MAAQ,CACT8C,SAAU,iBACVC,UAAW,IAJA,E,4FAQnB,iCAAAC,EAAA,sEACUjC,IAAMC,IAAN,UAAarB,EAAb,mBACCsB,MAAK,SAAAC,GACF,EAAKO,SAAS,CAAEsB,UAAW7B,EAAIT,KAAKwC,kBAEvCtB,OAAM,SAAAC,GACHC,QAAQC,IAAI,gDAN1B,2C,0EAUA,WAAU,IAAD,OACL,OACI,cAACoB,EAAA,EAAD,CAAgBnB,GAAG,kBAAkBE,MAAOtB,KAAKX,MAAM8C,SAAUK,SAAU,SAACC,GAAD,OAAO1C,EAAa0C,IAA/F,SACKzC,KAAKX,MAAM+C,UAAUzB,KAAI,SAAAR,GAAO,OAC7B,cAACuC,EAAA,EAASC,KAAV,CAAeC,SAAUzC,EAAuB0C,QAAS,EAAKf,YAA9D,SACK3B,GADkCA,Y,GAvB7BjB,aAqC9B,SAASa,EAAaI,ICnItB,IAYe2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d418cd44.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport './main.css';\r\n\r\nconst API_ENDPOINT = 'http://localhost:5000';\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CountryDropdown />\r\n                <CovidChart />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CovidChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            labels: [],\r\n            datasets: [\r\n                {\r\n                    label: 'Cases',\r\n                    fill: false,\r\n                    lineTension: 0.15,\r\n                    borderColor: 'rgba(0, 255, 0, 0.9)',\r\n                    borderWidth: 3,\r\n                    pointRadius: 1,\r\n                    data: [],\r\n                },\r\n                {\r\n                    label: 'Deaths',\r\n                    fill: false,\r\n                    lineTension: 0.15,\r\n                    borderColor: 'rgba(255, 0, 0, 0.9)',\r\n                    borderWidth: 4,\r\n                    pointRadius: 1,\r\n                    data: [],\r\n                }\r\n            ],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        refreshChart = this.updateChart.bind(this);\r\n    }\r\n\r\n    updateChart(country) {\r\n        axios.get(`${API_ENDPOINT}/api/countries/${country}`)\r\n            .then(res => {\r\n                const data = res.data.countryData;\r\n                const newDatasets = this.state.datasets.slice();\r\n\r\n                newDatasets[0].data = data['cases'].map(entry => entry.weeklyCount);\r\n                newDatasets[1].data = data['deaths'].map(entry => entry.weeklyCount);\r\n\r\n                this.setState( () => ({\r\n                    datasets: newDatasets,\r\n                    labels: data['cases'].map(entry => entry.yearWeek)\r\n                }));\r\n            })\r\n            .catch(err => {\r\n                console.log('Could not retrieve data from the server');\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='covid-chart'>\r\n                <Line\r\n                    data = {this.state}\r\n                    options = {{\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Weekly Covid Cases and Deaths by Country',\r\n                            fontSize: 20\r\n                        },\r\n                        legend: {\r\n                            display: true,\r\n                            position: 'right'\r\n                        },\r\n                        maintainAspectRatio: false,\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass CountryDropdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            btnTitle: \"Select Country\",\r\n            countries: []\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await axios.get(`${API_ENDPOINT}/api/countries`)\r\n              .then(res => {\r\n                  this.setState({ countries: res.data.countryNames });\r\n              })\r\n              .catch(err => {\r\n                  console.log('Error occured while loading country names');\r\n              })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DropdownButton id='dropdown-button' title={this.state.btnTitle} onSelect={(e) => refreshChart(e)}>\r\n                {this.state.countries.map(country => (\r\n                    <Dropdown.Item eventKey={country} key={country} onClick={this.changeTitle}>\r\n                        {country}\r\n                    </Dropdown.Item>\r\n                ))}\r\n            </DropdownButton>\r\n        );\r\n    }\r\n\r\n    changeTitle = (event) => {\r\n        let newTitle = event.target.textContent;\r\n        this.setState({ btnTitle: newTitle });\r\n    }\r\n}\r\n\r\nfunction refreshChart(country) {}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}